#==============================================================================
# Copyright (c) 2011 Evgeny Proydakov <lord.tiran@gmail.com>
#==============================================================================

CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)

PROJECT(I++)
MESSAGE(STATUS "CREATE  PROJECT  I++")

IF(UNIX)
    SET(CMAKE_C_FLAGS  "-Wall")
    SET(CMAKE_CXX_FLAGS "-Wall")
ELSE()
    STRING(REGEX REPLACE /W[0-4] /W4 CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
ENDIF(UNIX)

# temp setting
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug)
    #SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT CMAKE_BUILD_TYPE)

# build libraries type
IF(NOT BUILD_SHARED_LIBS)
    SET(BUILD_SHARED_LIBS ON)
ENDIF(NOT BUILD_SHARED_LIBS)

SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR})
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR})

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

# call system info script
INCLUDE(${CMAKE_MODULE_PATH}/FindOS.cmake)

# add the include folder to the include path
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})

IF(MSVC)
    SET(Boost_USE_STATIC_LIBS    ON)
    SET(Boost_USE_MULTITHREADED  ON)
ENDIF(MSVC)

FIND_PACKAGE(Boost)
IF(NOT Boost_FOUND)
    MESSAGE(FATAL_ERROR "Boost not found. Stop cmake.")
ENDIF(NOT Boost_FOUND)

SET(I_PLUS_PLUS_DIRECTORY ${PROJECT_SOURCE_DIR})
SET(ALGORITHMS_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/algorithms)
SET(BENCHMARK_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/benchmark)
SET(CV_VIEWER ${I_PLUS_PLUS_DIRECTORY}/cv_viewer)
SET(DATA_STRUCTURES_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/data_structures)
SET(EXAMPLES_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/examples)
SET(LANDSCAPE_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/landscape)
SET(LUA_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/lua)
SET(MAZE_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/maze)
SET(MULTITHREADING_DIRECOTRY ${I_PLUS_PLUS_DIRECTORY}/multithreading)
SET(SYNTAX_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/syntax)
SET(SYSTEM_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/system)
SET(TASKS_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/tasks)

SET(FILES 
    ${I_PLUS_PLUS_DIRECTORY}/README
    ${I_PLUS_PLUS_DIRECTORY}/COPYING)

ADD_SUBDIRECTORY(${BENCHMARK_DIRECTORY})
ADD_SUBDIRECTORY(${ALGORITHMS_DIRECTORY})
ADD_SUBDIRECTORY(${DATA_STRUCTURES_DIRECTORY})
ADD_SUBDIRECTORY(${EXAMPLES_DIRECTORY})
ADD_SUBDIRECTORY(${MULTITHREADING_DIRECOTRY})
ADD_SUBDIRECTORY(${SYNTAX_DIRECTORY})
ADD_SUBDIRECTORY(${SYSTEM_DIRECTORY})
ADD_SUBDIRECTORY(${TASKS_DIRECTORY})

IF(UNIX)
	FIND_PACKAGE(OpenCV)
	IF(OpenCV_FOUND)
		ADD_SUBDIRECTORY(${CV_VIEWER})
		ADD_SUBDIRECTORY(${LANDSCAPE_DIRECTORY})
		ADD_SUBDIRECTORY(${MAZE_DIRECTORY})
	ENDIF(OpenCV_FOUND)
ENDIF(UNIX)

FIND_PACKAGE(Lua51)
IF(LUA51_FOUND)
    ADD_SUBDIRECTORY(${LUA_DIRECTORY})
ENDIF(LUA51_FOUND)
