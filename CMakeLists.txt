#==============================================================================
# Copyright (c) 2011 Evgeny Proydakov <lord.tiran@gmail.com>
#==============================================================================

CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)

PROJECT(I++)
MESSAGE(STATUS "CREATE  PROJECT  I++")

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug)
    #SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(NOT BUILD_SHARED_LIBS)
    SET(BUILD_SHARED_LIBS ON)
ENDIF(NOT BUILD_SHARED_LIBS)

# configuration CMake directory
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR})
SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR})
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

# call system info script
INCLUDE(FindOS)

# include CMake macro
INCLUDE(imacro)
INCLUDE(icompiler)

COMPILER_SET_MAX_WARNING_LEVEL()

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR})

IF(MSVC)
    SET(Boost_USE_STATIC_LIBS    ON)
    SET(Boost_USE_MULTITHREADED  ON)
ENDIF(MSVC)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET(PROJECT_FOLDER "null")

SET(I_PLUS_PLUS_DIRECTORY ${PROJECT_SOURCE_DIR})

SET(FILES
    ${I_PLUS_PLUS_DIRECTORY}/README
    ${I_PLUS_PLUS_DIRECTORY}/COPYING)

FIND_PACKAGE(Boost)
IF(Boost_FOUND)
    SET(BENCHMARK_DIRECTORY ${I_PLUS_PLUS_DIRECTORY}/benchmark)

    ADD_SUBDIRECTORY(${BENCHMARK_DIRECTORY})
    ADD_SUBDIRECTORY(algorithms)
    ADD_SUBDIRECTORY(examples)
    ADD_SUBDIRECTORY(multithreading)
ENDIF(Boost_FOUND)

ADD_SUBDIRECTORY(data_structures)
ADD_SUBDIRECTORY(syntax)
ADD_SUBDIRECTORY(system)
ADD_SUBDIRECTORY(tasks)

FIND_PACKAGE(GLUT)
FIND_PACKAGE(OpenGL)
IF(GLUT_FOUND AND OPENGL_FOUND)
    ADD_SUBDIRECTORY(glut)
    ADD_SUBDIRECTORY(opengl)
ENDIF(GLUT_FOUND AND OPENGL_FOUND)

FIND_PACKAGE(Lua51)
IF(LUA51_FOUND)
    ADD_SUBDIRECTORY(lua)
ENDIF(LUA51_FOUND)

IF(BUILD_OpenCV)
    FIND_PACKAGE(OpenCV)
    IF(OpenCV_FOUND)
        ADD_SUBDIRECTORY(opencv)
    ENDIF(OpenCV_FOUND)
ENDIF(BUILD_OpenCV)
